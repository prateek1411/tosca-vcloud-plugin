plugins:
    vcloud:
        executor: central_deployment_agent
        source: https://github.com/cloudify-cosmo/tosca-vcloud-plugin/archive/master.zip
        package_name: cloudify-vcloud-plugin
        package_version: '4.0a1'

node_types:
    cloudify.vcloud.nodes.Server:
        derived_from: cloudify.nodes.Compute
        properties:
            use_external_resource:
                description: whether to create the resource or use an existing one
                default: false
            resource_id:
                description: |
                  Name for the new resource,
                  or if ``use_external_resource`` is ``true``,
                  the name or ID of an existing resource.
                default: ''
            server:
                description: |
                  key-value server configuration::

                    name: server name.
                    template: VApp template from which server will be spawned. For more information, see the [Misc section - VApp template](#vapp-template).
                    catalog: VApp templates catalog.
                    guest_customization: guest customization section
                        public_keys: public keys to inject; list of key-value configurations
                            key: public ssh key
                            user: user name
                        computer_name: vm hostname
                        admin_password: root password
                        pre_script: pre-customization script
                        post_script: post-customization script
                        script_executor: script executor, '/bin/bash' by default
                    hardware: key-value hardware customization section
                        cpu: vm cpu count
                        memory: vm memory size, in MB
                default: {}
            management_network:
                description: mangement network name
                default: ''
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: vcloud.vcloud_server_plugin.server.create
                    inputs: {}
                configure:
                    implementation: vcloud.vcloud_server_plugin.server.configure
                    inputs: {}
                start:
                    implementation: vcloud.vcloud_server_plugin.server.start
                    inputs: {}
                stop:
                    implementation: vcloud.vcloud_server_plugin.server.stop
                    inputs: {}
                delete:
                    implementation: vcloud.vcloud_server_plugin.server.delete
                    inputs: {}
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_server_plugin.server.creation_validation

    cloudify.vcloud.nodes.Network:
        derived_from: cloudify.nodes.Network
        properties:
            network:
                description: |
                  key-value network configuration.::

                    edge_gateway: edge gateway name
                    name: network name
                    static_range: static ip allocation pool range
                    netmask: network netmask
                    gateway_ip: network gateway
                    dns: list of dns ip addresses
                    dns_suffix: dns suffix
                    dhcp: dhcp settings
                        dhcp_range: DHCP pool range
                        default_lease: deault lease in seconds
                        max_lease: maximum lease in seconds
                default: {}
            use_external_resource:
                description: whether to create the resource or use an existing one
                default: false
            resource_id:
                description: |
                  Name for the new resource,
                  or if ``use_external_resource`` is ``true``,
                  the name or ID of an existing resource.
                default: ''
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: vcloud.vcloud_network_plugin.network.create
                    inputs: {}
                delete:
                    implementation: vcloud.vcloud_network_plugin.network.delete
                    inputs: {}
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_network_plugin.network.creation_validation

    cloudify.vcloud.nodes.Port:
        derived_from: cloudify.nodes.Port
        properties:
            port:
                description: |
                  key-value server network port configuration.::

                      network: network name.
                      ip_allocation_mode: ip allocation mode. Can be 'dhcp', 'pool' or 'manual'.
                      ip_address: ip address if ip allocation mode is 'manual'.
                      mac_address: interface MAC address.
                      primary_interface: is interface primary (true or false).
                default: {}
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_network_plugin.port.creation_validation

    cloudify.vcloud.nodes.FloatingIP:
        derived_from: cloudify.nodes.VirtualIP
        properties:
            floatingip:
                description: |
                  key-value floating ip configuration.::

                    edge_gateway: vCloud gateway name
                    public_ip: public IP. If not specified a public IP will be allocated automatically from the pool of free public IPs.

                default: {}
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_network_plugin.floatingip.creation_validation

    cloudify.vcloud.nodes.PublicNAT:
        derived_from: cloudify.nodes.VirtualIP
        properties:
            use_external_resource:
                description: whether to create the resource or use an existing one
                default: false
            nat:
                description: |
                  key-value NAT configuration.::

                    edge_gateway: vCloud gateway name
                    public_ip: public IP. If not specified a public IP will be allocated automatically from the pool of free public IPs.
                default: {}
            rules:
                description: |
                  List of key-value NAT rules.::

                    rules:
                      - protocol: network protocol. Can be 'tcp', 'udp' or 'any'. Applied only for 'DNAT'
                        original_port: original port. Applies only for 'DNAT'.
                        translated_port: translated port. Applies only for 'DNAT'.
                        type: list of NAT types. Can be 'SNAT', 'DNAT' or both.

                default: []
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_network_plugin.public_nat.creation_validation

    cloudify.vcloud.nodes.SecurityGroup:
        derived_from: cloudify.nodes.SecurityGroup
        properties:
            security_group:
                description: |
                  key-value SecurityGroup configuration.::

                    edge_gateway: vCloud gateway name
                default: {}
            rules:
                description: |
                  list of key-value security group rules::

                    rules:
                      - protocol: Can be 'tcp', 'udp', 'icmp' or 'any'
                        source: source of traffic to apply firewall rule on. Can be 'internal', 'external', 'host', 'any', ip address or ip range.
                        source_port: port number or 'any'
                        destination: destination of traffic to apply firewall rule on. Can be 'internal', 'external', 'host', 'any', ip address or ip range.
                        destination_port: port number or 'any'
                        action: 'allow' or 'deny'
                        log_traffic: capture traffic, 'true' or 'false'
                        description: rule description
                default: []
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_network_plugin.security_group.creation_validation

    cloudify.vcloud.nodes.KeyPair:
        derived_from: cloudify.nodes.Root
        properties:
            auto_generate:
                description: use if you want to auto-generate the key.
                default: false
            private_key:
                description: |
                  key-value private key configuration::

                    create_file: whether to save the file or not, use with ``auto_generate: true``
                default: {}
            public_key:
                description: |
                  key-value public key configuration::

                    key: ssh public key
                    user: user name
                default: {}
        interfaces:
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_network_plugin.keypair.creation_validation
            cloudify.interfaces.lifecycle:
                create:
                    implementation: vcloud.vcloud_network_plugin.keypair.create
                    inputs: {}
                delete:
                    implementation: vcloud.vcloud_network_plugin.keypair.delete
                    inputs: {}


    cloudify.vcloud.nodes.Volume:
        derived_from: cloudify.nodes.Volume
        properties:
            device_name:
                default: ''
                description: (unused)
            volume:
                description: |
                  key-value volume configuration::

                    name: name for the volume
                    size: volume size in MB
                default: {}
            use_external_resource:
                description: whether to create the resource or use an existing one
                default: false
            resource_id:
                description: |
                  Name for the new resource,
                  or if ``use_external_resource`` is ``true``,
                  the name or ID of an existing resource.
                default: ''
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: vcloud.vcloud_storage_plugin.volume.create_volume
                    inputs: {}
                delete:
                    implementation: vcloud.vcloud_storage_plugin.volume.delete_volume
                    inputs: {}
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_storage_plugin.volume.creation_validation

    cloudify.vcloud.nodes.VDC:
        derived_from: cloudify.nodes.Root
        properties:
            name:
                description: name for the VDC
                default: ''
            use_external_resource:
                description: whether to create the resource or use an existing one
                default: false
            resource_id:
                description: |
                  Name for the new resource,
                  or if ``use_external_resource`` is ``true``,
                  the name or ID of an existing resource.
                default: ''
            vcloud_config:
                description: see :ref:`vCloud_Config`
                default: {}
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: vcloud.vcloud_server_plugin.vdc.create
                    inputs: {}
                delete:
                    implementation: vcloud.vcloud_server_plugin.vdc.delete
                    inputs: {}
            cloudify.interfaces.validation:
                creation:
                    implementation: vcloud.vcloud_server_plugin.vdc.creation_validation

relationships:
    cloudify.vcloud.server_connected_to_floating_ip:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: vcloud.vcloud_network_plugin.floatingip.connect_floatingip
                    inputs: {}
                unlink:
                    implementation: vcloud.vcloud_network_plugin.floatingip.disconnect_floatingip
                    inputs: {}
    cloudify.vcloud.server_connected_to_network:
        derived_from: cloudify.relationships.connected_to
    cloudify.vcloud.port_connected_to_network:
        derived_from: cloudify.relationships.connected_to
    cloudify.vcloud.server_connected_to_port:
        derived_from: cloudify.relationships.connected_to
    cloudify.vcloud.server_connected_to_security_group:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: vcloud.vcloud_network_plugin.security_group.create
                    inputs: {}
                unlink:
                    implementation: vcloud.vcloud_network_plugin.security_group.delete
                    inputs: {}
    cloudify.vcloud.net_connected_to_public_nat:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                preconfigure:
                    implementation: vcloud.vcloud_network_plugin.public_nat.net_connect_to_nat_preconfigure
                    inputs: {}
                postconfigure:
                    implementation: vcloud.vcloud_network_plugin.public_nat.net_connect_to_nat
                    inputs: {}
                unlink:
                    implementation: vcloud.vcloud_network_plugin.public_nat.net_disconnect_from_nat
                    inputs: {}
    cloudify.vcloud.server_connected_to_public_nat:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: vcloud.vcloud_network_plugin.public_nat.server_connect_to_nat
                    inputs: {}
                unlink:
                    implementation: vcloud.vcloud_network_plugin.public_nat.server_disconnect_from_nat
                    inputs: {}
    cloudify.vcloud.volume_attached_to_server:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish:
                    implementation: vcloud.vcloud_storage_plugin.volume.attach_volume
                    inputs: {}
                unlink:
                    implementation: vcloud.vcloud_storage_plugin.volume.detach_volume
                    inputs: {}
    cloudify.vcloud.server_connected_to_keypair:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: vcloud.vcloud_network_plugin.keypair.server_connect_to_keypair
                    inputs: {}
                unlink:
                    implementation: vcloud.vcloud_network_plugin.keypair.server_disconnect_from_keypair
                    inputs: {}
    cloudify.vcloud.server_connected_to_vdc:
        derived_from: cloudify.relationships.connected_to
    cloudify.vcloud.delete_public_key_from_server:
        derived_from: cloudify.relationships.connected_to
        target_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish:
                    implementation: vcloud.vcloud_server_plugin.server.remove_keys
                    inputs: {}

workflows:
    scoreinstall: vcloud.vcloud_plugin_common.workflows.install
    scoreuninstall: vcloud.vcloud_plugin_common.workflows.uninstall
